root = true

##################################################
# Code Stage C# Root EditorConfig                #
# https://codestage.net                          #
##################################################

# All files
[*]
indent_style = tab
indent_size  = tab
charset      = utf-8
tab_width    = 4

# Code files
[*.{cs, ts}]
trim_trailing_whitespace = false
insert_final_newline     = false
max_line_length          = 120

[*.cs]
resharper_csharp_indent_style                                             = tab
resharper_csharp_alignment_tab_fill_style                                 = optimal_fill

###############################
# .NET Coding Conventions     #
###############################

# Organize usings
dotnet_sort_system_directives_first                                       = true
dotnet_separate_import_directive_groups                                   = false
resharper_csharp_sort_usings_with_system_first                            = true
csharp_using_directive_placement                                          = outside_namespace : suggestion

# this. preferences
dotnet_style_qualification_for_field                                      = false : suggestion
dotnet_style_qualification_for_property                                   = false : suggestion
dotnet_style_qualification_for_method                                     = false : suggestion
dotnet_style_qualification_for_event                                      = false : suggestion
resharper_csharp_static_members_qualify_members                           = none

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members                = true : suggestion
dotnet_style_predefined_type_for_member_access                            = true : suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers                              = always : suggestion
dotnet_style_readonly_field                                               = true : suggestion
resharper_arrange_type_member_modifiers_highlighting                      = suggestion

# Expression-level preferences
dotnet_style_object_initializer                                           = true : suggestion
dotnet_style_collection_initializer                                       = true : suggestion
resharper_use_object_or_collection_initializer_highlighting               = suggestion

dotnet_style_explicit_tuple_names                                         = true : suggestion
dotnet_style_null_propagation                                             = true : suggestion
resharper_use_null_propagation_highlighting                               = suggestion
dotnet_style_coalesce_expression                                          = true : suggestion
resharper_convert_if_statement_to_null_coalescing_expression_highlighting = suggestion
resharper_convert_to_null_coalescing_compound_assignment_highlighting     = suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method          = true : suggestion
dotnet_style_prefer_inferred_tuple_names                                  = true : suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names                  = true : suggestion
dotnet_style_prefer_auto_properties                                       = true : suggestion
resharper_convert_to_auto_property_highlighting                           = suggestion
resharper_auto_property_can_be_made_get_only_global_highlighting          = suggestion
resharper_auto_property_can_be_made_get_only_local_highlighting           = suggestion
resharper_check_namespace_highlighting                                    = silent

###############################
# Naming Conventions          #
###############################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization                      = pascal_case
dotnet_naming_style.camel_case_style.capitalization                       = camel_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity         = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols          = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style            = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds                    = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities          = *
dotnet_naming_symbols.constant_fields.required_modifiers                  = const

# Use PascalCase for events
dotnet_naming_rule.events_should_be_pascal_case.severity                  = suggestion
dotnet_naming_rule.events_should_be_pascal_case.symbols                   = events
dotnet_naming_rule.events_should_be_pascal_case.style                     = pascal_case_style
dotnet_naming_symbols.events.applicable_kinds                             = event
dotnet_naming_symbols.events.applicable_accessibilities                   = *

# Use PascalCase for readonly static fields
dotnet_naming_rule.readonly_static_fields_should_be_pascal_case.severity  = suggestion
dotnet_naming_rule.readonly_static_fields_should_be_pascal_case.symbols   = readonly_static_fields
dotnet_naming_rule.readonly_static_fields_should_be_pascal_case.style     = pascal_case_style
dotnet_naming_symbols.readonly_static_fields.applicable_kinds             = field
dotnet_naming_symbols.readonly_static_fields.applicable_accessibilities   = *
dotnet_naming_symbols.readonly_static_fields.required_modifiers           = readonly, static

# Use camelCase for fields
dotnet_naming_rule.fields_should_be_camel_case.severity                   = suggestion
dotnet_naming_rule.fields_should_be_camel_case.symbols                    = fields
dotnet_naming_rule.fields_should_be_camel_case.style                      = camel_case_style
dotnet_naming_symbols.fields.applicable_kinds                             = field
dotnet_naming_symbols.fields.applicable_accessibilities                   = *

###############################
# C# Coding Conventions       #
###############################

# var preferences
# csharp_style_var_for_built_in_types                                       = true : warning
# csharp_style_var_when_type_is_apparent                                    = true : warning
csharp_style_var_elsewhere                                                = true : suggestion
resharper_csharp_for_simple_types										  = can_use_either
resharper_csharp_for_built_in_types									      = can_use_either
resharper_csharp_for_other_types										  = use_var

# Expression-bodied members
csharp_style_expression_bodied_methods                                    = false : suggestion
csharp_style_expression_bodied_constructors                               = false : suggestion
csharp_style_expression_bodied_operators                                  = false : suggestion
csharp_style_expression_bodied_properties                                 = true : suggestion
csharp_style_expression_bodied_indexers                                   = true : suggestion
csharp_style_expression_bodied_accessors                                  = true : suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check                    = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                    = true : suggestion
resharper_use_pattern_matching_highlighting                              = suggestion

# Null-checking preferences
csharp_style_throw_expression                                             = true : suggestion
csharp_style_conditional_delegate_call                                    = true : suggestion

# Modifier preferences
csharp_preferred_modifier_order                                           = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async : suggestion

# Expression-level preferences
csharp_prefer_braces                                                      = true : silent
csharp_style_deconstructed_variable_declaration                           = true : suggestion
csharp_prefer_simple_default_expression                                   = true : suggestion
csharp_style_pattern_local_over_anonymous_function                        = true : suggestion
csharp_style_inlined_variable_declaration                                 = true : suggestion

###############################
# C# Formatting Rules         #
###############################

# Blank lines
csharp_blank_lines_around_field                                           = 0

# New line preferences
csharp_new_line_before_open_brace                                         = all
csharp_new_line_before_else                                               = true
csharp_new_line_before_catch                                              = true
csharp_new_line_before_finally                                            = true
csharp_new_line_before_members_in_object_initializers                     = true
csharp_new_line_before_members_in_anonymous_types                         = true
csharp_new_line_between_query_expression_clauses                          = true
resharper_csharp_accessor_declaration_braces                              = next_line

# Attributes arrangement
csharp_keep_existing_attribute_arrangement                                = true

# Indentation preferences
csharp_indent_case_contents                                               = true
csharp_indent_switch_labels                                               = true
csharp_indent_labels                                                      = flush_left
resharper_csharp_continuous_indent_multiplier                             = 1
resharper_csharp_indent_preprocessor_if                                   = no_indent
resharper_csharp_indent_preprocessor_other                                = no_indent
resharper_csharp_indent_preprocessor_region                               = usual_indent

# Space preferences
csharp_space_after_cast                                                   = false
csharp_space_after_keywords_in_control_flow_statements                    = true
csharp_space_between_method_call_parameter_list_parentheses               = false
csharp_space_between_method_declaration_parameter_list_parentheses        = false
csharp_space_between_parentheses                                          = false
csharp_space_before_colon_in_inheritance_clause                           = true
csharp_space_after_colon_in_inheritance_clause                            = true
csharp_space_around_binary_operators                                      = before_and_after
csharp_space_around_binary_operator                                       = true
csharp_space_around_multiplicative_op                                     = true
resharper_space_around_nullcoalescing_op                                  = true
resharper_space_around_binary_operator                                    = true
csharp_space_between_method_declaration_empty_parameter_list_parentheses  = false
csharp_space_between_method_call_name_and_opening_parenthesis             = false
csharp_space_between_method_call_empty_parameter_list_parentheses         = false

# Wrapping preferences
csharp_preserve_single_line_statements                                    = false
csharp_preserve_single_line_blocks                                        = true

###################################################################################
# Unity-specific Rules                                                            #
# https://github.com/JetBrains/resharper-unity/issues/1353#issuecomment-540535939 #
###################################################################################

resharper_unity_explicit_tag_comparison_highlighting                  = error

# https://github.com/JetBrains/resharper-unity/wiki/Redundant-Unity-event-function
resharper_unity_redundant_event_function_highlighting                 = warning

# https://github.com/JetBrains/resharper-unity/wiki/Prefer-using-generic-method-overload-instead-of-string
resharper_unity_prefer_generic_method_overload_highlighting           = error

# https://github.com/JetBrains/resharper-unity/wiki/Camera.main-is-inefficient-in-frequently-called-methods
resharper_unity_performance_critical_code_camera_main_highlighting    = warning

# https://github.com/JetBrains/resharper-unity/wiki/Avoid-using-string-based-names-for-setting-and-getting-properties-on-Animators,-Shaders-and-Materials
resharper_unity_prefer_address_by_id_to_graphics_params_highlighting  = warning

# https://github.com/JetBrains/resharper-unity/wiki/Avoid-using-string-based-Method-Invocation
resharper_unity_performance_critical_code_invocation_highlighting     = hint

# https://github.com/JetBrains/resharper-unity/wiki/Avoid-using-Object.Instantiate-without-%E2%80%9CTransform-Parent%E2%80%9D-parameter-and-using-SetParent-later
resharper_unity_instantiate_without_parent_highlighting               = warning